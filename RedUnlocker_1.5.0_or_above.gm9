set PREVIEW_MODE "Checking GodMode9 version"
set ERR_MSG_VER "Version not supported"

# Red Unlocker for 1.5.0 and above
# author : windows-server-2003
# permissions : Blue
# This script will unlock the SysNAND level3 writing permission(Red)
# with only memory writing permission(Blue)

# RUN THIS AT YOUR OWN RISK
# I am not responsible for anything

# check version - check the hash of the top 256KB of the firm
set ERRORMSG $[ERR_MSG_VER] # instead of "'if' command not found" for lower versions
if sha -o -s M:/arm9.mem@6000:40000 AF01396C62963613DFE5F5E36B06C9863ED733F05F14ED73B037C259D3BA2E6C
	######## for 1.5.0 - since this does not support "fill" command, it's specially handled
	
	# ask user
		set PREVIEW_MODE "Version : 1.5.0\n \nAsking user"
		set SUCCESSMSG "The red permission unlocked\n \nTo say :\nBe careful when you unlock the blue permission"
		ask -s "RedUnlocker 1.5.0\n \nDo you know what you are doing?\nIf not, press B button.\nCONTINUE AT YOUR OWN RISK"
	
	# get the blue permission
		set PREVIEW_MODE "Version : 1.5.0\n \nGetting the blue permission"
		set ERRORMSG "This script needs the blue permission."
		allow M:/arm9.mem
	
	#### make res_RU.bin filled with 0xFF for 1Byte
		set PREVIEW_MODE "Version : 1.5.0\n \nMaking res_RU.bin"
		set ERRORMSG "failed to make 'res_RU.bin'"
		set RESPATH 0:/gm9/res_RU.bin
		
		# remove old files
		rm -o -s $[RESPATH]
		rm -o -s $[RESPATH].tmp
		rm -o -s $[RESPATH].tmp.sha
		
		# Always 0x00
		inject M:/boot9.bin@FFFF:1 $[RESPATH].tmp@0
		
		# Is really 0x00 ?
		sha $[RESPATH].tmp 6E340B9CFFB37A989CA544E6BB780A2C78901D3FB33738768511A30617AFA01D
	
		# get sha256 (The 5th byte is 0xFF)
		shaget $[RESPATH].tmp $[RESPATH].tmp.sha
		
		# inject 0xFF to the output
		inject $[RESPATH].tmp.sha@4:1 $[RESPATH]@0
		
		# remove temporary files
		rm $[RESPATH].tmp
		rm $[RESPATH].tmp.sha
		
	#### Actual unlocking
		set PREVIEW_MODE "Version : 1.5.0\n \nUnlocking the red permission"
		set ERRORMSG "Failed to read 'res_RU.bin'"
		inject $[RESPATH]@0:1 M:/arm9.mem@51FB0
		inject $[RESPATH]@0:1 M:/arm9.mem@51FB1
		inject $[RESPATH]@0:1 M:/arm9.mem@51FB2
		inject $[RESPATH]@0:1 M:/arm9.mem@51FB3
	
		# remove res_RU.bin
		rm $[RESPATH]
		
	# no more stuff to do(ended special handling)
	goto finish
	
elif sha -o -s M:/arm9.mem@6000:40000 31DF2A11BF4514F1B8C8D3B12EA738733CFFA301364499CF33DF4B8B48111C86
	######## 1.5.1
	set GM9_VERSION "1.5.1"
	set ADDRESS "52638"
else
	# not supported - force fail
    not -s echo $[ERR_MSG_VER]
end

## operations for other than 1.5.0
# ask user
	set PREVIEW_MODE "Version : $[GM9_VERSION]\n \nAsking user"
	set SUCCESSMSG "The red permission unlocked\n \nTo say :\nBe careful when you unlock the blue permission"
	ask -s "RedUnlocker $[GM9_VERSION]\n \nDo you know what you are doing?\nIf not, press B button.\nCONTINUE AT YOUR OWN RISK"

# get the blue permission
	set PREVIEW_MODE "Version : $[GM9_VERSION]\n \nGetting the blue permission"
	set ERRORMSG "This script needs the blue permission."
	allow M:/arm9.mem

# actual unlocking
	set PREVIEW_MODE "Version : $[GM9_VERSION]\n \nUnlocking the red permission"
	set ERRORMSG "Unknown error"
	fill M:/arm9.mem@$[ADDRESS]:4 FF

@finish